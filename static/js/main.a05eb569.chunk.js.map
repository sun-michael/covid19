{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","usState","province","county","stats","confirmed","deaths","updatedAt","CardList","usStates","map","s","index","App","state","searchField","fetch","then","response","json","data","setState","this","filteredUsStates","filter","toLowerCase","includes","type","placeholder","onChange","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAIaA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,6BAAKD,EAAME,QAAQC,WACnB,6BAAKH,EAAME,QAAQE,SACnB,6CAAgBJ,EAAME,QAAQG,MAAMC,aACpC,0CAAaN,EAAME,QAAQG,MAAME,UACjC,+CAAkBP,EAAME,QAAQM,iBCJvBC,G,MAAW,SAACT,GAAD,OACtB,qBAAKC,UAAU,YAAf,SACGD,EAAMU,SAASC,KAAI,SAACC,EAAGC,GAAJ,OAClB,cAAE,EAAF,CAAmBX,QAASU,GAAhBC,UCsCHC,G,wDAzCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXL,SAAU,GACVM,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBC,MAAM,iDAOHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAAEZ,SAAUW,S,oBAG5C,WAAU,IAAD,OACP,EAAkCE,KAAKR,MAA/BL,EAAR,EAAQA,SAAUM,EAAlB,EAAkBA,YACZQ,EAAmBd,EAASe,QAAO,SAAAvB,GAAO,OAC9CA,EAAQC,SAASuB,cAAcC,SAASX,EAAYU,kBAGtD,OACE,sBAAKzB,UAAU,MAAf,UACE,uBAAO2B,KAAK,SACVC,YAAY,eACZC,SAAU,SAAAC,GACR,EAAKT,SAAS,CAAEN,YAAae,EAAEC,OAAOC,WAG1C,cAAC,EAAD,CAAUvB,SAAUc,W,GApCVU,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a05eb569.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.styles.css'\n\nexport const Card = (props) => (\n  <div className=\"card-container\">\n    <h1>{props.usState.province}</h1>\n    <h3>{props.usState.county}</h3>\n    <h4>confirmed: {props.usState.stats.confirmed}</h4>\n    <h4>deaths: {props.usState.stats.deaths}</h4>\n    <h4>last update: {props.usState.updatedAt}</h4>\n  </div>\n)","import React from 'react';\n\nimport { Card } from '../card/card.component';\n\nimport './card-list.styles.css';\n\nexport const CardList = (props) => (\n  <div className=\"card-list\">\n    {props.usStates.map((s, index) => (\n      < Card key={index} usState={s} />\n    ))}\n  </div>\n)","import React, { Component } from 'react';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      usStates: [],\n      searchField: ''\n    };\n  };\n\n  componentDidMount() {\n    fetch('https://corona.lmao.ninja/v2/jhucsse/counties')\n      // fetch('https://api.covidtracking.com/v1/states/info.json')\n      // fetch('https://api.covidtracking.com/v1/states/daily.json')\n      // fetch('https://jsonplaceholder.typicode.com/users')\n      // .then(r => console.log(r))\n      // .then(r => r.json())\n      // .then(r => console.log(r))\n      .then(response => response.json())\n      .then(data => this.setState({ usStates: data }))\n  }\n\n  render() {\n    const { usStates, searchField } = this.state;\n    const filteredUsStates = usStates.filter(usState =>\n      usState.province.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <input type=\"search\"\n          placeholder=\"search state\"\n          onChange={e => {\n            this.setState({ searchField: e.target.value })\n          }}\n        />\n        <CardList usStates={filteredUsStates} />\n      </div >\n    );\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}